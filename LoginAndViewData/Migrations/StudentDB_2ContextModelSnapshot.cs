// <auto-generated />
using LoginAndViewData.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoginAndViewData.Migrations
{
    [DbContext(typeof(StudentDB_2Context))]
    partial class StudentDB_2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LoginAndViewData.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("Movie_Id");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Movie_Name");

                    b.HasKey("MovieId");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("LoginAndViewData.Models.MovieStudent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("Movie_Id");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("Student_Id");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("StudentId");

                    b.ToTable("MovieStudent", (string)null);
                });

            modelBuilder.Entity("LoginAndViewData.Models.StudentDetail", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("Student_Id");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Blood_Group");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("File_Name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mobile_No");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentDetails");
                });

            modelBuilder.Entity("LoginAndViewData.Models.StudentLogin", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StudentLogin", (string)null);
                });

            modelBuilder.Entity("LoginAndViewData.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("Subject_Id");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Subject_Name");

                    b.HasKey("SubjectId");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("LoginAndViewData.Models.SubjectStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectStudent", (string)null);
                });

            modelBuilder.Entity("LoginAndViewData.Models.MovieStudent", b =>
                {
                    b.HasOne("LoginAndViewData.Models.Movie", "Movie")
                        .WithMany("MovieStudents")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieStudent_Movie");

                    b.HasOne("LoginAndViewData.Models.StudentDetail", "Student")
                        .WithMany("MovieStudents")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieStudent_MovieStudent");

                    b.Navigation("Movie");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LoginAndViewData.Models.SubjectStudent", b =>
                {
                    b.HasOne("LoginAndViewData.Models.StudentDetail", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_SubjectStudent_StudentDetails");

                    b.HasOne("LoginAndViewData.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_SubjectStudent_Subject");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LoginAndViewData.Models.Movie", b =>
                {
                    b.Navigation("MovieStudents");
                });

            modelBuilder.Entity("LoginAndViewData.Models.StudentDetail", b =>
                {
                    b.Navigation("MovieStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
